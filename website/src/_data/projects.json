[
  {
    "title": "AWS Cloud Portfolio",
    "stack": "React · Python · AWS · Terraform",
    "description": "A project showcasing my skills in AWS services and GitHub CI/CD pipelining.",
    "image": "https://phammings.github.io/cloud-portfolio/projectImages/resume-laptop.png",
    "image2": "https://phammings.github.io/cloud-portfolio/projectImages/resume-snapshot.png",
    "image3": "https://phammings.github.io/cloud-portfolio/projectImages/resume-snapshot.png",
    "technologies": ["React", "Python", "S3", "AWS CloudFront", "Route53", "Certificate Manager", "AWS Lambda", "DynamoDB", "GitHub Actions", "Terraform"],
    "body": "This project is my submission for the Cloud Resume Challenge, showcasing my skills in AWS services and GitHub Actions. I've created a static React resume website using AWS services such as S3 for storage, AWS CloudFront for content delivery, Certificate Manager for SSL/TLS certificates, AWS Lambda for serverless functions, and DynamoDB for database management. \nFor the CI/CD process, I've implemented GitHub Actions workflows for both the frontend and backend. The workflows use Terraform to manage infrastructure as code, enabling automated deployment and scaling of the application. Overall, this project demonstrates my proficiency in leveraging AWS services and implementing CI/CD pipelines using GitHub Actions for building modern web applications.",
    "github": "https://github.com/phammings/cloud-portfolio",
    "deployed": "https://d1o7hy938n9c4o.cloudfront.net/",
    "bgcolor": "#89CFF0",
    "id": "1"
  },
  {
    "title": "Clothing Store",
    "stack": "Java · React · Postgresql · Docker",
    "description": "Full stack ecommerce app built with React, Java Springboot and Postgresql",
    "image": "https://phammings.github.io/cloud-portfolio/projectImages/clothing-laptop.png",
    "image2": "https://phammings.github.io/cloud-portfolio/projectImages/clothing-snapshot.png",
    "image3": "https://phammings.github.io/cloud-portfolio/projectImages/clothing-snapshot.png",
    "technologies": ["Java Springboot", "React", "Postgresql", "GraphQL", "Docker"],
    "body": "The project is a full-stack e-commerce application for a clothing store, developed using React for the frontend, Spring Boot for the backend, and PostgreSQL for the database. The application includes user authentication and registration features, allowing users to create accounts and login securely. \nAdmin functionalities are implemented to manage users, orders, and items within the store. The project aims to explore full-stack technologies, implement background logic for REST API endpoints, and extend functionality through user and admin features. Git is used for version control, and code style conventions are followed. Testing is conducted using tools like Curl or Postman to ensure the application functions as expected. The application emphasizes database and node-based relationships between different components, mirroring industry practices for creating large-scale products.",
    "github": "https://github.com/phammings/clothing-store",
    "deployed": "https://github.com/phammings/clothing-store",
    "bgcolor": "var(--hl2-color)",
    "id": "2"
  },
  {
    "title": "Music Microservice API",
    "stack": "Java · MongoDB · Neo4j · Docker · AWS",
    "description": "Spotify Music Player API clone interfacing through MongoDB and Neo4j graph databases.",
    "image": "https://phammings.github.io/cloud-portfolio/projectImages/api-laptop.png",
    "image2": "https://phammings.github.io/cloud-portfolio/projectImages/api-snapshot.png",
    "image3": "https://phammings.github.io/cloud-portfolio/projectImages/api-snapshot.png",
    "technologies": ["Java Springboot", "MongoDB", "Neo4j", "Postman", "Robot Framework", "Docker", "AWS"],
    "body": "The project focuses on a backend Java API with two microservices, interfacing with MongoDB and Neo4j databases. Emphasising real-world scenarios, the project aims to explore NoSQL and Graph databases, implement background logic for REST API endpoints, and extend functionality through new features of a Spotify music webservice clone. \nCreated features for the Song and Profile microservice application such as adding songs to a playlist, liking songs, creating profiles, etc. and using okhttp3 to communicate between the two microservices. Git usage, code style conventions, and testing with tools like Curl or Postman were also essential components implemented. The application will emphasize on database and node based relationships between different components, in an attempt to recreate industry practices and how business create large scale products.",
    "github": "https://github.com/phammings/Music-Microservice-API",
    "deployed": "https://github.com/phammings/Music-Microservice-API",
    "bgcolor": "#6c4bf4",
    "id": "3"
  },
  {
    "title": "S&P 500 Gamma Exposure Calculator",
    "stack": "Python · Selenium · Shell Script",
    "description": "Calculate the Absolute Gamma Exposure and Gamma Profile of the current S&P 500 market index",
    "image": "https://phammings.github.io/cloud-portfolio/projectImages/gamma-laptop.png",
    "image2": "https://phammings.github.io/cloud-portfolio/projectImages/gamma-snapshot.png",
    "image3": "https://phammings.github.io/cloud-portfolio/projectImages/gamma-snapshot.png",
    "body": "The project obtains options data from CBOE on the S&P 500 index to generate the absolute gamma exposure (by dollars and by calls/puts) and the gamma profile of the current market.\nGamma exposure refers to the impact of options trading, particularly in equity markets, and plays a crucial role in influencing market dynamics. This exposure is significant, especially in the case of S&P 500 options, which constitute a substantial portion (16%) of the S&P 500 market cap.",
    "technologies": ["Python", "Selenium", "Matplotlab", "Pysci", "Shell Script"],
    "github": "https://github.com/phammings/SPX500-Gamma-Exposure-Calculator",
    "deployed": "https://github.com/phammings/SPX500-Gamma-Exposure-Calculator",
    "bgcolor": "#BFBF00",
    "id": "4"
  },
  {
    "title": "Todo List",
    "stack": "Typescript · TailwindCSS · HTML · Firebase",
    "description": "Task management app with todo tasks, projects, and features such as due dates, priorities, etc.",
    "image": "https://phammings.github.io/cloud-portfolio/projectImages/todo-laptop.png",
    "image2": "https://phammings.github.io/cloud-portfolio/projectImages/todolist-snapshot.png",
    "image3": "https://phammings.github.io/cloud-portfolio/projectImages/todolist-snapshot.png",
    "technologies": ["Typescript", "HTML", "TailwindCSS", "Firebase"],
    "body": "The project involves creating a todo list application with dynamic todo items, projects, and features such as due dates, priorities, and project management. The application employs TypeScript for strong typing and enhanced code organization, and Tailwind CSS for styling, ensuring a responsive and visually appealing user interface.\n Additionally, the project incorporates the Web Storage API, specifically localStorage, for data persistence, allowing users to save and retrieve their todo lists even after refreshing the page through JSON. This project also utilizes Firebase for a simple backend implementation solution for user authentication and data storage.",
    "github": "https://github.com/phammings/todo-list",
    "deployed": "https://phammings.github.io/todo-list/",
    "bgcolor": "var(--hl-color)",
    "id": "5"
  },
  {
    "title": "Number Memorization Game",
    "stack": "Java · Android Studio",
    "description": "Mobile Android app on a number memorization game.",
    "image": "https://phammings.github.io/cloud-portfolio/projectImages/numgame-phone.png",
    "image2": "https://phammings.github.io/cloud-portfolio/projectImages/numgame-snapshot.png",
    "image3": "https://phammings.github.io/cloud-portfolio/projectImages/numgame-snapshot.png",
    "technologies": ["Java", "Android Studio"],
    "body": "This java based mobile android application implements a simple number memorization game. With 3 difficulty levels: easy, medium, and hard, users will have to memorize number sequences and input it to app to tally up points with an objective of getting the highest score possible.",
    "github": "https://github.com/phammings/Number-Memoriation-Game",
    "deployed": "https://github.com/phammings/Number-Memoriation-Game",
    "bgcolor": "#f85781",
    "id": "6"
  },
  {
    "title": "Tic Tac Toe",
    "stack": "Javascript · CSS · HTML",
    "description": "Website application of the Tic Tac Toe game.",
    "image": "https://phammings.github.io/cloud-portfolio/projectImages/tictactoe-laptop.png",
    "image2": "https://phammings.github.io/cloud-portfolio/projectImages/tictactoe-snapshot.png",
    "image3": "https://phammings.github.io/cloud-portfolio/projectImages/tictactoe-snapshot.png",
    "body": "This project primarily focuses on using modules and factory functions to implement an interactive tic-tac-toe game that can be played versus another player or an AI on a web browser's DOM. An additional goal of the project was to familiarize myself with CSS animations which is heavily used in the project.",
    "technologies": ["Javascript", "HTML", "CSS"],
    "github": "https://github.com/phammings/tic-tac-toe",
    "deployed": "https://phammings.github.io/tic-tac-toe/",
    "bgcolor": "#e47911",
    "id": "7"
  }
]